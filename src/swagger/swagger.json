{
  "openapi": "3.0.0",
  "info": {
    "title": "My Product API",
    "description": "API for managing products and authentication",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Authenticate a user",
        "tags": ["Auth"],
        "description": "Logs in a user with their login and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, returns a token",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/BasicResponse" },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "token": { "type": "string" }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "description": "Creates a new user with login and password.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/BasicResponse" },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "login": { "type": "string" }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Login already in use",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse"
                }
              }
            }
          },
          "500": {
            "description": "Error creating user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "summary": "Retrieve all products",
        "tags": ["Products"],
        "description": "Fetches a paginated list of products with optional filters.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default: 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items per page (default: 10, max: 100)",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "maximum": 100
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by product name",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 50
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Filter by product value",
            "required": false,
            "schema": {
              "type": "number",
              "minimum": 0
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Filter by start date (creation date)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Filter by end date (creation date)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    { "$ref": "#/components/schemas/BasicResponse" },
                    {
                      "properties": {
                        "data": {
                          "type": "object",
                          "properties": {
                            "products": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/ProductResponse"
                              }
                            },
                            "currentPage": { "type": "integer" },
                            "totalProducts": { "type": "integer" },
                            "totalPages": { "type": "integer" },
                            "pageSize": { "type": "integer" }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Error listing products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new product",
        "tags": ["Products"],
        "description": "Creates a new product with the provided details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductResponse"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error saving product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse"
                },
                "example": {
                  "success": false,
                  "message": "Error saving product",
                  "error": "An unexpected error occurred"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Retrieve a product by ID",
        "tags": ["Products"],
        "description": "Fetches a specific product by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the product to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Product retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/ProductResponse"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Product not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse"
                },
                "example": {
                  "success": false,
                  "message": "Product not found"
                }
              }
            }
          },
          "500": {
            "description": "Error searching for product",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResponse"
                },
                "example": {
                  "success": false,
                  "message": "Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BasicResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "description": "Indicates whether the request was successful"
          },
          "message": {
            "type": "string",
            "description": "A message describing the result of the request"
          },
          "data": {
            "type": "object",
            "description": "The response data (if any)"
          },
          "error": {
            "type": "string",
            "description": "Error details (if any)"
          }
        },
        "required": ["success", "message"]
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "The product's name"
          },
          "code": {
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "The product's unique code (alphanumeric)"
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "description": "The product's value"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of product creation"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp of last product update"
          },
          "version": {
            "type": "number",
            "description": "Version of the product document"
          }
        },
        "required": ["name", "code", "value"]
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "The product's name"
          },
          "code": {
            "type": "string",
            "minLength": 3,
            "maxLength": 20,
            "pattern": "^[a-zA-Z0-9]+$",
            "description": "The product's unique code (alphanumeric)"
          },
          "value": {
            "type": "number",
            "minimum": 0,
            "description": "The product's value"
          }
        },
        "required": ["name", "code", "value"]
      },
      "UserRequest": {
        "type": "object",
        "properties": {
          "login": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "The user's login"
          },
          "password": {
            "type": "string",
            "minLength": 3,
            "maxLength": 50,
            "description": "The user's password"
          }
        },
        "required": ["login", "password"]
      }
    }
  }
}
